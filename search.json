[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Wang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang K (2022). KW: Functions personal use. R package version 0.6.0.","code":"@Manual{,   title = {KW: Functions for my own personal use},   author = {Kevin Wang},   year = {2022},   note = {R package version 0.6.0}, }"},{"path":"/index.html","id":"the-kw-package","dir":"","previous_headings":"","what":"Functions for my own personal use","title":"Functions for my own personal use","text":"package intended research work. intended wider distribution.","code":"devtools::install_github(\"kevinwang09/KW\")"},{"path":"/index.html","id":"contents-and-capabilities","dir":"","previous_headings":"","what":"Contents and capabilities","title":"Functions for my own personal use","text":"interactive visualisation Shiny app data using ggplot object. See KW::ggplot_explorer. addin function execute roxygen2::roxygenise using keyboard shortcut, see KW::execute_roxygenise. series one-liner functions speed typical data processing. R-markdown templates useful data analytics. (experimental) Quick classification evaluations: series functions intended “one-liners” create classification results metrics.","code":""},{"path":"/reference/clean_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the digits in a data frame — clean_digits","title":"Clean the digits in a data frame — clean_digits","text":"Clean digits data frame","code":""},{"path":"/reference/clean_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the digits in a data frame — clean_digits","text":"","code":"clean_digits(df, digits = 2)"},{"path":"/reference/clean_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean the digits in a data frame — clean_digits","text":"df data frame numeric columns digits Number significant figures round numeric columns ","code":""},{"path":"/reference/clean_digits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean the digits in a data frame — clean_digits","text":"data frame numeric columns rounded specified number significant figures","code":""},{"path":"/reference/clean_digits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clean the digits in a data frame — clean_digits","text":"Kevin Wang","code":""},{"path":"/reference/clean_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean the digits in a data frame — clean_digits","text":"","code":"head(iris) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa head(clean_digits(iris, digits = 1)) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1            5           4            1         0.2  setosa #> 2            5           3            1         0.2  setosa #> 3            5           3            1         0.2  setosa #> 4            5           3            2         0.2  setosa #> 5            5           4            1         0.2  setosa #> 6            5           4            2         0.4  setosa"},{"path":"/reference/cv_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Performing CV using random forest, allowing multiple cores — cv_multi","title":"Performing CV using random forest, allowing multiple cores — cv_multi","text":"Performing CV using random forest, allowing multiple cores","code":""},{"path":"/reference/cv_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performing CV using random forest, allowing multiple cores — cv_multi","text":"","code":"cv_multi(x, y, method = \"svm\", nfolds = 5, nexp = 5)"},{"path":"/reference/cv_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performing CV using random forest, allowing multiple cores — cv_multi","text":"x design matrix y factor method Method classification algorithm nfolds number CV folds nexp number loops","code":""},{"path":"/reference/cv_multi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performing CV using random forest, allowing multiple cores — cv_multi","text":"Kevin Wang","code":""},{"path":"/reference/cv_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performing CV using random forest, allowing multiple cores — cv_multi","text":"","code":"x = iris[51:150, -5] y = factor(iris[51:150, 5]) res = cv_multi(x = x, y = y, method = \"rf\") #> Warning: UNRELIABLE VALUE: Future (‘<none>’) unexpectedly generated random numbers without specifying argument 'seed'. There is a risk that those random numbers are not statistically sound and the overall results might be invalid. To fix this, specify 'seed=TRUE'. This ensures that proper, parallel-safe random numbers are produced via the L'Ecuyer-CMRG method. To disable this check, use 'seed=NULL', or set option 'future.rng.onMisuse' to \"ignore\". if (FALSE) { library(furrr) plan(multisession(workers = 5)) res = cv_multi(x = x, y = y, method = \"rf\", nexp = 20) plan(future::sequential) }"},{"path":"/reference/cv_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing cv_partition object — cv_object","title":"Printing cv_partition object — cv_object","text":"Printing cv_partition object","code":""},{"path":"/reference/cv_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing cv_partition object — cv_object","text":"","code":"cv_object(cv_object)"},{"path":"/reference/cv_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing cv_partition object — cv_object","text":"cv_object Output cv_partition","code":""},{"path":"/reference/cv_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating CV data partition — cv_partition","title":"Creating CV data partition — cv_partition","text":"Creating CV data partition","code":""},{"path":"/reference/cv_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating CV data partition — cv_partition","text":"","code":"cv_partition(x, y, nfolds)"},{"path":"/reference/cv_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating CV data partition — cv_partition","text":"x x matrix without rownames y y true labels nfolds number folds","code":""},{"path":"/reference/cv_partition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creating CV data partition — cv_partition","text":"Kevin Wang","code":""},{"path":"/reference/cv_partition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating CV data partition — cv_partition","text":"","code":"x = iris[51:150, -5] y = factor(iris[51:150, 5]) cvp = cv_partition(x = x, y = y, nfolds = 5) cvp #> $fold_num #> [1] \"Fold1\" \"Fold2\" \"Fold3\" \"Fold4\" \"Fold5\" #>  #> $test_x #> $test_x$Fold1 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 81           5.5         2.4          3.8         1.1 #> 85           5.4         3.0          4.5         1.5 #> 88           6.3         2.3          4.4         1.3 #> 93           5.8         2.6          4.0         1.2 #> 101          6.3         3.3          6.0         2.5 #> 110          7.2         3.6          6.1         2.5 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 119          7.7         2.6          6.9         2.3 #> 125          6.7         3.3          5.7         2.1 #> 133          6.4         2.8          5.6         2.2 #> 135          6.1         2.6          5.6         1.4 #> 145          6.7         3.3          5.7         2.5 #> 148          6.5         3.0          5.2         2.0 #>  #> $test_x$Fold2 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 53           6.9         3.1          4.9         1.5 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 75           6.4         2.9          4.3         1.3 #> 77           6.8         2.8          4.8         1.4 #> 84           6.0         2.7          5.1         1.6 #> 86           6.0         3.4          4.5         1.6 #> 89           5.6         3.0          4.1         1.3 #> 91           5.5         2.6          4.4         1.2 #> 100          5.7         2.8          4.1         1.3 #> 105          6.5         3.0          5.8         2.2 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 118          7.7         3.8          6.7         2.2 #> 121          6.9         3.2          5.7         2.3 #> 124          6.3         2.7          4.9         1.8 #> 131          7.4         2.8          6.1         1.9 #> 139          6.0         3.0          4.8         1.8 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 #>  #> $test_x$Fold3 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 51           7.0         3.2          4.7         1.4 #> 54           5.5         2.3          4.0         1.3 #> 57           6.3         3.3          4.7         1.6 #> 59           6.6         2.9          4.6         1.3 #> 62           5.9         3.0          4.2         1.5 #> 66           6.7         3.1          4.4         1.4 #> 74           6.1         2.8          4.7         1.2 #> 76           6.6         3.0          4.4         1.4 #> 82           5.5         2.4          3.7         1.0 #> 96           5.7         3.0          4.2         1.2 #> 111          6.5         3.2          5.1         2.0 #> 115          5.8         2.8          5.1         2.4 #> 117          6.5         3.0          5.5         1.8 #> 120          6.0         2.2          5.0         1.5 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 127          6.2         2.8          4.8         1.8 #> 130          7.2         3.0          5.8         1.6 #> 137          6.3         3.4          5.6         2.4 #> 147          6.3         2.5          5.0         1.9 #>  #> $test_x$Fold4 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 60           5.2         2.7          3.9         1.4 #> 65           5.6         2.9          3.6         1.3 #> 67           5.6         3.0          4.5         1.5 #> 72           6.1         2.8          4.0         1.3 #> 80           5.7         2.6          3.5         1.0 #> 87           6.7         3.1          4.7         1.5 #> 90           5.5         2.5          4.0         1.3 #> 92           6.1         3.0          4.6         1.4 #> 94           5.0         2.3          3.3         1.0 #> 98           6.2         2.9          4.3         1.3 #> 104          6.3         2.9          5.6         1.8 #> 109          6.7         2.5          5.8         1.8 #> 112          6.4         2.7          5.3         1.9 #> 126          7.2         3.2          6.0         1.8 #> 129          6.4         2.8          5.6         2.1 #> 134          6.3         2.8          5.1         1.5 #> 138          6.4         3.1          5.5         1.8 #> 141          6.7         3.1          5.6         2.4 #> 144          6.8         3.2          5.9         2.3 #> 146          6.7         3.0          5.2         2.3 #>  #> $test_x$Fold5 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 52           6.4         3.2          4.5         1.5 #> 58           4.9         2.4          3.3         1.0 #> 61           5.0         2.0          3.5         1.0 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 73           6.3         2.5          4.9         1.5 #> 83           5.8         2.7          3.9         1.2 #> 95           5.6         2.7          4.2         1.3 #> 97           5.7         2.9          4.2         1.3 #> 99           5.1         2.5          3.0         1.1 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 106          7.6         3.0          6.6         2.1 #> 116          6.4         3.2          5.3         2.3 #> 128          6.1         3.0          4.9         1.8 #> 132          7.9         3.8          6.4         2.0 #> 136          7.7         3.0          6.1         2.3 #> 140          6.9         3.1          5.4         2.1 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #>  #>  #> $test_y #> $test_y$Fold1 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor virginica  virginica  #> [13] virginica  virginica  virginica  virginica  virginica  virginica  #> [19] virginica  virginica  #> Levels: versicolor virginica #>  #> $test_y$Fold2 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor virginica  virginica  #> [13] virginica  virginica  virginica  virginica  virginica  virginica  #> [19] virginica  virginica  #> Levels: versicolor virginica #>  #> $test_y$Fold3 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor virginica  virginica  #> [13] virginica  virginica  virginica  virginica  virginica  virginica  #> [19] virginica  virginica  #> Levels: versicolor virginica #>  #> $test_y$Fold4 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor virginica  virginica  #> [13] virginica  virginica  virginica  virginica  virginica  virginica  #> [19] virginica  virginica  #> Levels: versicolor virginica #>  #> $test_y$Fold5 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor virginica  virginica  #> [13] virginica  virginica  virginica  virginica  virginica  virginica  #> [19] virginica  virginica  #> Levels: versicolor virginica #>  #>  #> $train_x #> $train_x$Fold1 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 51           7.0         3.2          4.7         1.4 #> 52           6.4         3.2          4.5         1.5 #> 53           6.9         3.1          4.9         1.5 #> 54           5.5         2.3          4.0         1.3 #> 57           6.3         3.3          4.7         1.6 #> 58           4.9         2.4          3.3         1.0 #> 59           6.6         2.9          4.6         1.3 #> 60           5.2         2.7          3.9         1.4 #> 61           5.0         2.0          3.5         1.0 #> 62           5.9         3.0          4.2         1.5 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 65           5.6         2.9          3.6         1.3 #> 66           6.7         3.1          4.4         1.4 #> 67           5.6         3.0          4.5         1.5 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 72           6.1         2.8          4.0         1.3 #> 73           6.3         2.5          4.9         1.5 #> 74           6.1         2.8          4.7         1.2 #> 75           6.4         2.9          4.3         1.3 #> 76           6.6         3.0          4.4         1.4 #> 77           6.8         2.8          4.8         1.4 #> 80           5.7         2.6          3.5         1.0 #> 82           5.5         2.4          3.7         1.0 #> 83           5.8         2.7          3.9         1.2 #> 84           6.0         2.7          5.1         1.6 #> 86           6.0         3.4          4.5         1.6 #> 87           6.7         3.1          4.7         1.5 #> 89           5.6         3.0          4.1         1.3 #> 90           5.5         2.5          4.0         1.3 #> 91           5.5         2.6          4.4         1.2 #> 92           6.1         3.0          4.6         1.4 #> 94           5.0         2.3          3.3         1.0 #> 95           5.6         2.7          4.2         1.3 #> 96           5.7         3.0          4.2         1.2 #> 97           5.7         2.9          4.2         1.3 #> 98           6.2         2.9          4.3         1.3 #> 99           5.1         2.5          3.0         1.1 #> 100          5.7         2.8          4.1         1.3 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 104          6.3         2.9          5.6         1.8 #> 105          6.5         3.0          5.8         2.2 #> 106          7.6         3.0          6.6         2.1 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 109          6.7         2.5          5.8         1.8 #> 111          6.5         3.2          5.1         2.0 #> 112          6.4         2.7          5.3         1.9 #> 115          5.8         2.8          5.1         2.4 #> 116          6.4         3.2          5.3         2.3 #> 117          6.5         3.0          5.5         1.8 #> 118          7.7         3.8          6.7         2.2 #> 120          6.0         2.2          5.0         1.5 #> 121          6.9         3.2          5.7         2.3 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 124          6.3         2.7          4.9         1.8 #> 126          7.2         3.2          6.0         1.8 #> 127          6.2         2.8          4.8         1.8 #> 128          6.1         3.0          4.9         1.8 #> 129          6.4         2.8          5.6         2.1 #> 130          7.2         3.0          5.8         1.6 #> 131          7.4         2.8          6.1         1.9 #> 132          7.9         3.8          6.4         2.0 #> 134          6.3         2.8          5.1         1.5 #> 136          7.7         3.0          6.1         2.3 #> 137          6.3         3.4          5.6         2.4 #> 138          6.4         3.1          5.5         1.8 #> 139          6.0         3.0          4.8         1.8 #> 140          6.9         3.1          5.4         2.1 #> 141          6.7         3.1          5.6         2.4 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #> 144          6.8         3.2          5.9         2.3 #> 146          6.7         3.0          5.2         2.3 #> 147          6.3         2.5          5.0         1.9 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 #>  #> $train_x$Fold2 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 51           7.0         3.2          4.7         1.4 #> 52           6.4         3.2          4.5         1.5 #> 54           5.5         2.3          4.0         1.3 #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 57           6.3         3.3          4.7         1.6 #> 58           4.9         2.4          3.3         1.0 #> 59           6.6         2.9          4.6         1.3 #> 60           5.2         2.7          3.9         1.4 #> 61           5.0         2.0          3.5         1.0 #> 62           5.9         3.0          4.2         1.5 #> 65           5.6         2.9          3.6         1.3 #> 66           6.7         3.1          4.4         1.4 #> 67           5.6         3.0          4.5         1.5 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 72           6.1         2.8          4.0         1.3 #> 73           6.3         2.5          4.9         1.5 #> 74           6.1         2.8          4.7         1.2 #> 76           6.6         3.0          4.4         1.4 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 80           5.7         2.6          3.5         1.0 #> 81           5.5         2.4          3.8         1.1 #> 82           5.5         2.4          3.7         1.0 #> 83           5.8         2.7          3.9         1.2 #> 85           5.4         3.0          4.5         1.5 #> 87           6.7         3.1          4.7         1.5 #> 88           6.3         2.3          4.4         1.3 #> 90           5.5         2.5          4.0         1.3 #> 92           6.1         3.0          4.6         1.4 #> 93           5.8         2.6          4.0         1.2 #> 94           5.0         2.3          3.3         1.0 #> 95           5.6         2.7          4.2         1.3 #> 96           5.7         3.0          4.2         1.2 #> 97           5.7         2.9          4.2         1.3 #> 98           6.2         2.9          4.3         1.3 #> 99           5.1         2.5          3.0         1.1 #> 101          6.3         3.3          6.0         2.5 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 104          6.3         2.9          5.6         1.8 #> 106          7.6         3.0          6.6         2.1 #> 109          6.7         2.5          5.8         1.8 #> 110          7.2         3.6          6.1         2.5 #> 111          6.5         3.2          5.1         2.0 #> 112          6.4         2.7          5.3         1.9 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 115          5.8         2.8          5.1         2.4 #> 116          6.4         3.2          5.3         2.3 #> 117          6.5         3.0          5.5         1.8 #> 119          7.7         2.6          6.9         2.3 #> 120          6.0         2.2          5.0         1.5 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 125          6.7         3.3          5.7         2.1 #> 126          7.2         3.2          6.0         1.8 #> 127          6.2         2.8          4.8         1.8 #> 128          6.1         3.0          4.9         1.8 #> 129          6.4         2.8          5.6         2.1 #> 130          7.2         3.0          5.8         1.6 #> 132          7.9         3.8          6.4         2.0 #> 133          6.4         2.8          5.6         2.2 #> 134          6.3         2.8          5.1         1.5 #> 135          6.1         2.6          5.6         1.4 #> 136          7.7         3.0          6.1         2.3 #> 137          6.3         3.4          5.6         2.4 #> 138          6.4         3.1          5.5         1.8 #> 140          6.9         3.1          5.4         2.1 #> 141          6.7         3.1          5.6         2.4 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #> 144          6.8         3.2          5.9         2.3 #> 145          6.7         3.3          5.7         2.5 #> 146          6.7         3.0          5.2         2.3 #> 147          6.3         2.5          5.0         1.9 #> 148          6.5         3.0          5.2         2.0 #>  #> $train_x$Fold3 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 52           6.4         3.2          4.5         1.5 #> 53           6.9         3.1          4.9         1.5 #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 58           4.9         2.4          3.3         1.0 #> 60           5.2         2.7          3.9         1.4 #> 61           5.0         2.0          3.5         1.0 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 65           5.6         2.9          3.6         1.3 #> 67           5.6         3.0          4.5         1.5 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 72           6.1         2.8          4.0         1.3 #> 73           6.3         2.5          4.9         1.5 #> 75           6.4         2.9          4.3         1.3 #> 77           6.8         2.8          4.8         1.4 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 80           5.7         2.6          3.5         1.0 #> 81           5.5         2.4          3.8         1.1 #> 83           5.8         2.7          3.9         1.2 #> 84           6.0         2.7          5.1         1.6 #> 85           5.4         3.0          4.5         1.5 #> 86           6.0         3.4          4.5         1.6 #> 87           6.7         3.1          4.7         1.5 #> 88           6.3         2.3          4.4         1.3 #> 89           5.6         3.0          4.1         1.3 #> 90           5.5         2.5          4.0         1.3 #> 91           5.5         2.6          4.4         1.2 #> 92           6.1         3.0          4.6         1.4 #> 93           5.8         2.6          4.0         1.2 #> 94           5.0         2.3          3.3         1.0 #> 95           5.6         2.7          4.2         1.3 #> 97           5.7         2.9          4.2         1.3 #> 98           6.2         2.9          4.3         1.3 #> 99           5.1         2.5          3.0         1.1 #> 100          5.7         2.8          4.1         1.3 #> 101          6.3         3.3          6.0         2.5 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 104          6.3         2.9          5.6         1.8 #> 105          6.5         3.0          5.8         2.2 #> 106          7.6         3.0          6.6         2.1 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 109          6.7         2.5          5.8         1.8 #> 110          7.2         3.6          6.1         2.5 #> 112          6.4         2.7          5.3         1.9 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 116          6.4         3.2          5.3         2.3 #> 118          7.7         3.8          6.7         2.2 #> 119          7.7         2.6          6.9         2.3 #> 121          6.9         3.2          5.7         2.3 #> 124          6.3         2.7          4.9         1.8 #> 125          6.7         3.3          5.7         2.1 #> 126          7.2         3.2          6.0         1.8 #> 128          6.1         3.0          4.9         1.8 #> 129          6.4         2.8          5.6         2.1 #> 131          7.4         2.8          6.1         1.9 #> 132          7.9         3.8          6.4         2.0 #> 133          6.4         2.8          5.6         2.2 #> 134          6.3         2.8          5.1         1.5 #> 135          6.1         2.6          5.6         1.4 #> 136          7.7         3.0          6.1         2.3 #> 138          6.4         3.1          5.5         1.8 #> 139          6.0         3.0          4.8         1.8 #> 140          6.9         3.1          5.4         2.1 #> 141          6.7         3.1          5.6         2.4 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #> 144          6.8         3.2          5.9         2.3 #> 145          6.7         3.3          5.7         2.5 #> 146          6.7         3.0          5.2         2.3 #> 148          6.5         3.0          5.2         2.0 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 #>  #> $train_x$Fold4 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 51           7.0         3.2          4.7         1.4 #> 52           6.4         3.2          4.5         1.5 #> 53           6.9         3.1          4.9         1.5 #> 54           5.5         2.3          4.0         1.3 #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 57           6.3         3.3          4.7         1.6 #> 58           4.9         2.4          3.3         1.0 #> 59           6.6         2.9          4.6         1.3 #> 61           5.0         2.0          3.5         1.0 #> 62           5.9         3.0          4.2         1.5 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 66           6.7         3.1          4.4         1.4 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 70           5.6         2.5          3.9         1.1 #> 71           5.9         3.2          4.8         1.8 #> 73           6.3         2.5          4.9         1.5 #> 74           6.1         2.8          4.7         1.2 #> 75           6.4         2.9          4.3         1.3 #> 76           6.6         3.0          4.4         1.4 #> 77           6.8         2.8          4.8         1.4 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 81           5.5         2.4          3.8         1.1 #> 82           5.5         2.4          3.7         1.0 #> 83           5.8         2.7          3.9         1.2 #> 84           6.0         2.7          5.1         1.6 #> 85           5.4         3.0          4.5         1.5 #> 86           6.0         3.4          4.5         1.6 #> 88           6.3         2.3          4.4         1.3 #> 89           5.6         3.0          4.1         1.3 #> 91           5.5         2.6          4.4         1.2 #> 93           5.8         2.6          4.0         1.2 #> 95           5.6         2.7          4.2         1.3 #> 96           5.7         3.0          4.2         1.2 #> 97           5.7         2.9          4.2         1.3 #> 99           5.1         2.5          3.0         1.1 #> 100          5.7         2.8          4.1         1.3 #> 101          6.3         3.3          6.0         2.5 #> 102          5.8         2.7          5.1         1.9 #> 103          7.1         3.0          5.9         2.1 #> 105          6.5         3.0          5.8         2.2 #> 106          7.6         3.0          6.6         2.1 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 110          7.2         3.6          6.1         2.5 #> 111          6.5         3.2          5.1         2.0 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 115          5.8         2.8          5.1         2.4 #> 116          6.4         3.2          5.3         2.3 #> 117          6.5         3.0          5.5         1.8 #> 118          7.7         3.8          6.7         2.2 #> 119          7.7         2.6          6.9         2.3 #> 120          6.0         2.2          5.0         1.5 #> 121          6.9         3.2          5.7         2.3 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 124          6.3         2.7          4.9         1.8 #> 125          6.7         3.3          5.7         2.1 #> 127          6.2         2.8          4.8         1.8 #> 128          6.1         3.0          4.9         1.8 #> 130          7.2         3.0          5.8         1.6 #> 131          7.4         2.8          6.1         1.9 #> 132          7.9         3.8          6.4         2.0 #> 133          6.4         2.8          5.6         2.2 #> 135          6.1         2.6          5.6         1.4 #> 136          7.7         3.0          6.1         2.3 #> 137          6.3         3.4          5.6         2.4 #> 139          6.0         3.0          4.8         1.8 #> 140          6.9         3.1          5.4         2.1 #> 142          6.9         3.1          5.1         2.3 #> 143          5.8         2.7          5.1         1.9 #> 145          6.7         3.3          5.7         2.5 #> 147          6.3         2.5          5.0         1.9 #> 148          6.5         3.0          5.2         2.0 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 #>  #> $train_x$Fold5 #>     Sepal.Length Sepal.Width Petal.Length Petal.Width #> 51           7.0         3.2          4.7         1.4 #> 53           6.9         3.1          4.9         1.5 #> 54           5.5         2.3          4.0         1.3 #> 55           6.5         2.8          4.6         1.5 #> 56           5.7         2.8          4.5         1.3 #> 57           6.3         3.3          4.7         1.6 #> 59           6.6         2.9          4.6         1.3 #> 60           5.2         2.7          3.9         1.4 #> 62           5.9         3.0          4.2         1.5 #> 63           6.0         2.2          4.0         1.0 #> 64           6.1         2.9          4.7         1.4 #> 65           5.6         2.9          3.6         1.3 #> 66           6.7         3.1          4.4         1.4 #> 67           5.6         3.0          4.5         1.5 #> 68           5.8         2.7          4.1         1.0 #> 69           6.2         2.2          4.5         1.5 #> 72           6.1         2.8          4.0         1.3 #> 74           6.1         2.8          4.7         1.2 #> 75           6.4         2.9          4.3         1.3 #> 76           6.6         3.0          4.4         1.4 #> 77           6.8         2.8          4.8         1.4 #> 78           6.7         3.0          5.0         1.7 #> 79           6.0         2.9          4.5         1.5 #> 80           5.7         2.6          3.5         1.0 #> 81           5.5         2.4          3.8         1.1 #> 82           5.5         2.4          3.7         1.0 #> 84           6.0         2.7          5.1         1.6 #> 85           5.4         3.0          4.5         1.5 #> 86           6.0         3.4          4.5         1.6 #> 87           6.7         3.1          4.7         1.5 #> 88           6.3         2.3          4.4         1.3 #> 89           5.6         3.0          4.1         1.3 #> 90           5.5         2.5          4.0         1.3 #> 91           5.5         2.6          4.4         1.2 #> 92           6.1         3.0          4.6         1.4 #> 93           5.8         2.6          4.0         1.2 #> 94           5.0         2.3          3.3         1.0 #> 96           5.7         3.0          4.2         1.2 #> 98           6.2         2.9          4.3         1.3 #> 100          5.7         2.8          4.1         1.3 #> 101          6.3         3.3          6.0         2.5 #> 104          6.3         2.9          5.6         1.8 #> 105          6.5         3.0          5.8         2.2 #> 107          4.9         2.5          4.5         1.7 #> 108          7.3         2.9          6.3         1.8 #> 109          6.7         2.5          5.8         1.8 #> 110          7.2         3.6          6.1         2.5 #> 111          6.5         3.2          5.1         2.0 #> 112          6.4         2.7          5.3         1.9 #> 113          6.8         3.0          5.5         2.1 #> 114          5.7         2.5          5.0         2.0 #> 115          5.8         2.8          5.1         2.4 #> 117          6.5         3.0          5.5         1.8 #> 118          7.7         3.8          6.7         2.2 #> 119          7.7         2.6          6.9         2.3 #> 120          6.0         2.2          5.0         1.5 #> 121          6.9         3.2          5.7         2.3 #> 122          5.6         2.8          4.9         2.0 #> 123          7.7         2.8          6.7         2.0 #> 124          6.3         2.7          4.9         1.8 #> 125          6.7         3.3          5.7         2.1 #> 126          7.2         3.2          6.0         1.8 #> 127          6.2         2.8          4.8         1.8 #> 129          6.4         2.8          5.6         2.1 #> 130          7.2         3.0          5.8         1.6 #> 131          7.4         2.8          6.1         1.9 #> 133          6.4         2.8          5.6         2.2 #> 134          6.3         2.8          5.1         1.5 #> 135          6.1         2.6          5.6         1.4 #> 137          6.3         3.4          5.6         2.4 #> 138          6.4         3.1          5.5         1.8 #> 139          6.0         3.0          4.8         1.8 #> 141          6.7         3.1          5.6         2.4 #> 144          6.8         3.2          5.9         2.3 #> 145          6.7         3.3          5.7         2.5 #> 146          6.7         3.0          5.2         2.3 #> 147          6.3         2.5          5.0         1.9 #> 148          6.5         3.0          5.2         2.0 #> 149          6.2         3.4          5.4         2.3 #> 150          5.9         3.0          5.1         1.8 #>  #>  #> $train_y #> $train_y$Fold1 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor versicolor versicolor #> [13] versicolor versicolor versicolor versicolor versicolor versicolor #> [19] versicolor versicolor versicolor versicolor versicolor versicolor #> [25] versicolor versicolor versicolor versicolor versicolor versicolor #> [31] versicolor versicolor versicolor versicolor versicolor versicolor #> [37] versicolor versicolor versicolor versicolor virginica  virginica  #> [43] virginica  virginica  virginica  virginica  virginica  virginica  #> [49] virginica  virginica  virginica  virginica  virginica  virginica  #> [55] virginica  virginica  virginica  virginica  virginica  virginica  #> [61] virginica  virginica  virginica  virginica  virginica  virginica  #> [67] virginica  virginica  virginica  virginica  virginica  virginica  #> [73] virginica  virginica  virginica  virginica  virginica  virginica  #> [79] virginica  virginica  #> Levels: versicolor virginica #>  #> $train_y$Fold2 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor versicolor versicolor #> [13] versicolor versicolor versicolor versicolor versicolor versicolor #> [19] versicolor versicolor versicolor versicolor versicolor versicolor #> [25] versicolor versicolor versicolor versicolor versicolor versicolor #> [31] versicolor versicolor versicolor versicolor versicolor versicolor #> [37] versicolor versicolor versicolor versicolor virginica  virginica  #> [43] virginica  virginica  virginica  virginica  virginica  virginica  #> [49] virginica  virginica  virginica  virginica  virginica  virginica  #> [55] virginica  virginica  virginica  virginica  virginica  virginica  #> [61] virginica  virginica  virginica  virginica  virginica  virginica  #> [67] virginica  virginica  virginica  virginica  virginica  virginica  #> [73] virginica  virginica  virginica  virginica  virginica  virginica  #> [79] virginica  virginica  #> Levels: versicolor virginica #>  #> $train_y$Fold3 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor versicolor versicolor #> [13] versicolor versicolor versicolor versicolor versicolor versicolor #> [19] versicolor versicolor versicolor versicolor versicolor versicolor #> [25] versicolor versicolor versicolor versicolor versicolor versicolor #> [31] versicolor versicolor versicolor versicolor versicolor versicolor #> [37] versicolor versicolor versicolor versicolor virginica  virginica  #> [43] virginica  virginica  virginica  virginica  virginica  virginica  #> [49] virginica  virginica  virginica  virginica  virginica  virginica  #> [55] virginica  virginica  virginica  virginica  virginica  virginica  #> [61] virginica  virginica  virginica  virginica  virginica  virginica  #> [67] virginica  virginica  virginica  virginica  virginica  virginica  #> [73] virginica  virginica  virginica  virginica  virginica  virginica  #> [79] virginica  virginica  #> Levels: versicolor virginica #>  #> $train_y$Fold4 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor versicolor versicolor #> [13] versicolor versicolor versicolor versicolor versicolor versicolor #> [19] versicolor versicolor versicolor versicolor versicolor versicolor #> [25] versicolor versicolor versicolor versicolor versicolor versicolor #> [31] versicolor versicolor versicolor versicolor versicolor versicolor #> [37] versicolor versicolor versicolor versicolor virginica  virginica  #> [43] virginica  virginica  virginica  virginica  virginica  virginica  #> [49] virginica  virginica  virginica  virginica  virginica  virginica  #> [55] virginica  virginica  virginica  virginica  virginica  virginica  #> [61] virginica  virginica  virginica  virginica  virginica  virginica  #> [67] virginica  virginica  virginica  virginica  virginica  virginica  #> [73] virginica  virginica  virginica  virginica  virginica  virginica  #> [79] virginica  virginica  #> Levels: versicolor virginica #>  #> $train_y$Fold5 #>  [1] versicolor versicolor versicolor versicolor versicolor versicolor #>  [7] versicolor versicolor versicolor versicolor versicolor versicolor #> [13] versicolor versicolor versicolor versicolor versicolor versicolor #> [19] versicolor versicolor versicolor versicolor versicolor versicolor #> [25] versicolor versicolor versicolor versicolor versicolor versicolor #> [31] versicolor versicolor versicolor versicolor versicolor versicolor #> [37] versicolor versicolor versicolor versicolor virginica  virginica  #> [43] virginica  virginica  virginica  virginica  virginica  virginica  #> [49] virginica  virginica  virginica  virginica  virginica  virginica  #> [55] virginica  virginica  virginica  virginica  virginica  virginica  #> [61] virginica  virginica  virginica  virginica  virginica  virginica  #> [67] virginica  virginica  virginica  virginica  virginica  virginica  #> [73] virginica  virginica  virginica  virginica  virginica  virginica  #> [79] virginica  virginica  #> Levels: versicolor virginica #>  #>  #> $original_index #>   [1]  41  81  21  42   1   2  43  82  44  61  83  45  22  23  62  46  63   3 #>  [19]   4  84  85  64  86  47  24  48  25   5   6  65   7  49  87  26   8  27 #>  [37]  66   9  28  67  29  68  10  69  88  50  89  70  90  30  11  91  92  71 #>  [55]  31  93  32  33  72  12  51  73  13  14  52  94  53  34  15  54  35  55 #>  [73]  56  36  16  74  57  95  75  58  37  96  17  76  18  97  59  77  38  98 #>  [91]  78  99 100  79  19  80  60  20  39  40 #>  #> $original_names #> NULL #>  #> attr(,\"class\") #> [1] \"cv_object\""},{"path":"/reference/execute_roxygenise.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute roxygen2::roxygenise(). — execute_roxygenise","title":"Execute roxygen2::roxygenise(). — execute_roxygenise","text":"Call function send \"roxygen2::roxygenise()\" console rstudio execute. Steps: 1. Install KW package. 2. Go Tools -> Addins -> Browse Addins RStudio session. 3. Create shortcut function.","code":""},{"path":"/reference/execute_roxygenise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute roxygen2::roxygenise(). — execute_roxygenise","text":"","code":"execute_roxygenise()"},{"path":"/reference/ggplot_explorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app for ggplot exploration — ggplot_explorer","title":"Shiny app for ggplot exploration — ggplot_explorer","text":"Shiny app ggplot exploration","code":""},{"path":"/reference/ggplot_explorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app for ggplot exploration — ggplot_explorer","text":"","code":"ggplot_explorer(uploaded_plot)"},{"path":"/reference/ggplot_explorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny app for ggplot exploration — ggplot_explorer","text":"uploaded_plot ggplot object","code":""},{"path":"/reference/ggplot_explorer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny app for ggplot exploration — ggplot_explorer","text":"Kevin Wang","code":""},{"path":"/reference/ggplot_explorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny app for ggplot exploration — ggplot_explorer","text":"","code":"if(interactive()){ uploaded_plot = ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width,            colour = Species)) +   geom_point() ggplot_explorer(uploaded_plot = uploaded_plot) }"},{"path":"/reference/loess_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate loess span parameter using cross validation — loess_cv","title":"Calculate loess span parameter using cross validation — loess_cv","text":"Calculate loess span parameter using cross validation","code":""},{"path":"/reference/loess_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate loess span parameter using cross validation — loess_cv","text":"","code":"loess_cv(formula, data, span = seq(0.1, 1, by = 0.1), v = 5, repeats = 2)"},{"path":"/reference/loess_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate loess span parameter using cross validation — loess_cv","text":"formula see loess() data see loess() span see loess() v Number CV fold, see rsample::vfold_cv() repeats NUmber CV repeats, see rsample::vfold_cv()","code":""},{"path":"/reference/loess_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate loess span parameter using cross validation — loess_cv","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2)  data(economics, package=\"ggplot2\")  # load data economics$index <- 1:nrow(economics)  # create index variable data <- economics[1:80, ]  # retail 80rows for better graphical understanding lresult = loess_cv(uempmed ~ index, data = data, span = c(0.1, 0.2, 0.3, 0.4, 0.5), v = 5, repeats = 20)  lresult %>% group_by(span) %>% summarise(sse = mean(resid2)) #> # A tibble: 5 × 2 #>    span    sse #>   <dbl>  <dbl> #> 1   0.1 0.108  #> 2   0.2 0.0898 #> 3   0.3 0.0940 #> 4   0.4 0.0963 #> 5   0.5 0.0989  lresult %>% ggplot(aes(x = factor(span), y = resid2)) + geom_boxplot()"},{"path":"/reference/padded_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence of variable names, all with the same length — padded_names","title":"Sequence of variable names, all with the same length — padded_names","text":"Sequence variable names, length","code":""},{"path":"/reference/padded_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence of variable names, all with the same length — padded_names","text":"","code":"padded_names(prefix, p)"},{"path":"/reference/padded_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence of variable names, all with the same length — padded_names","text":"prefix Prefix variable names p Number variables","code":""},{"path":"/reference/padded_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence of variable names, all with the same length — padded_names","text":"","code":"paste0(\"X\", 1:10) #>  [1] \"X1\"  \"X2\"  \"X3\"  \"X4\"  \"X5\"  \"X6\"  \"X7\"  \"X8\"  \"X9\"  \"X10\" padded_names(\"X\", 10) #>  [1] \"X01\" \"X02\" \"X03\" \"X04\" \"X05\" \"X06\" \"X07\" \"X08\" \"X09\" \"X10\""},{"path":"/reference/plot_RLE.html","id":null,"dir":"Reference","previous_headings":"","what":"RLE plot — plot_RLE","title":"RLE plot — plot_RLE","text":"RLE plot","code":""},{"path":"/reference/plot_RLE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RLE plot — plot_RLE","text":"","code":"plot_RLE(exprs_matrix)"},{"path":"/reference/plot_RLE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RLE plot — plot_RLE","text":"exprs_matrix matrix","code":""},{"path":"/reference/plot_RLE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RLE plot — plot_RLE","text":"Kevin Wang","code":""},{"path":"/reference/plot_RLE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RLE plot — plot_RLE","text":"","code":"n = 30 p = 1000 exprs_matrix = cbind( matrix(rnorm((n - 3)*p), nrow = p), matrix(rnorm(3*p, mean = 5), nrow = p) ) boxplot(exprs_matrix)  plot_RLE(exprs_matrix) #> $rle_plotdf #> # A tibble: 30 × 4 #>    sample_id sample_median sample_q1 sample_q3 #>    <fct>             <dbl>     <dbl>     <dbl> #>  1 sample_1       -0.0192     -0.694     0.696 #>  2 sample_2        0.0389     -0.663     0.746 #>  3 sample_3        0.0188     -0.659     0.685 #>  4 sample_4        0.0261     -0.632     0.694 #>  5 sample_5       -0.0199     -0.705     0.630 #>  6 sample_6       -0.0552     -0.762     0.638 #>  7 sample_7       -0.0388     -0.637     0.571 #>  8 sample_8        0.00132    -0.678     0.663 #>  9 sample_9        0.0231     -0.627     0.683 #> 10 sample_10      -0.00200    -0.684     0.649 #> # … with 20 more rows #> # ℹ Use `print(n = ...)` to see more rows #>  #> $rle_plot  #>"},{"path":"/reference/print.cv_pred_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing cv_partition object — print.cv_pred_result","title":"Printing cv_partition object — print.cv_pred_result","text":"Printing cv_partition object","code":""},{"path":"/reference/print.cv_pred_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing cv_partition object — print.cv_pred_result","text":"","code":"# S3 method for cv_pred_result print(cv_pred_result)"},{"path":"/reference/print.cv_pred_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing cv_partition object — print.cv_pred_result","text":"cv_pred_result Output *_cv functions","code":""},{"path":"/reference/rf_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Performing CV using random forest — rf_cv","title":"Performing CV using random forest — rf_cv","text":"Performing CV using random forest","code":""},{"path":"/reference/rf_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performing CV using random forest — rf_cv","text":"","code":"rf_cv(cv_obj)"},{"path":"/reference/rf_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performing CV using random forest — rf_cv","text":"cv_obj outputs cvPartition function","code":""},{"path":"/reference/rf_cv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performing CV using random forest — rf_cv","text":"Kevin Wang","code":""},{"path":"/reference/rf_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performing CV using random forest — rf_cv","text":"","code":"x = iris[51:150, -5] y = factor(iris[51:150, 5]) cv_obj = cv_partition(x = x, y = y, nfolds = 5) rf_cv(cv_obj) #> $fold_error #> Fold1 Fold2 Fold3 Fold4 Fold5  #>  0.00  0.10  0.05  0.20  0.00  #>  #> $mean_error #> [1] 0.07 #>  #> $predict_class #>   [1] versicolor versicolor versicolor versicolor versicolor versicolor #>   [7] versicolor versicolor versicolor versicolor versicolor versicolor #>  [13] versicolor versicolor versicolor versicolor versicolor versicolor #>  [19] versicolor versicolor virginica  versicolor versicolor versicolor #>  [25] versicolor versicolor versicolor virginica  versicolor versicolor #>  [31] versicolor versicolor versicolor virginica  versicolor versicolor #>  [37] versicolor versicolor versicolor versicolor versicolor versicolor #>  [43] versicolor versicolor versicolor versicolor versicolor versicolor #>  [49] versicolor versicolor virginica  virginica  virginica  virginica  #>  [55] virginica  virginica  versicolor virginica  virginica  virginica  #>  [61] virginica  virginica  virginica  virginica  virginica  virginica  #>  [67] virginica  virginica  virginica  versicolor virginica  virginica  #>  [73] virginica  virginica  virginica  virginica  virginica  virginica  #>  [79] virginica  versicolor virginica  virginica  virginica  versicolor #>  [85] virginica  virginica  virginica  virginica  virginica  virginica  #>  [91] virginica  virginica  virginica  virginica  virginica  virginica  #>  [97] virginica  virginica  virginica  virginica  #> Levels: versicolor virginica #>  #> $predict_prob #>        versicolor virginica #>   [1,]      0.990     0.010 #>   [2,]      0.990     0.010 #>   [3,]      0.792     0.208 #>   [4,]      0.996     0.004 #>   [5,]      0.968     0.032 #>   [6,]      0.992     0.008 #>   [7,]      0.928     0.072 #>   [8,]      1.000     0.000 #>   [9,]      0.998     0.002 #>  [10,]      0.990     0.010 #>  [11,]      0.984     0.016 #>  [12,]      0.996     0.004 #>  [13,]      0.994     0.006 #>  [14,]      0.950     0.050 #>  [15,]      0.998     0.002 #>  [16,]      0.990     0.010 #>  [17,]      0.996     0.004 #>  [18,]      1.000     0.000 #>  [19,]      0.890     0.110 #>  [20,]      0.998     0.002 #>  [21,]      0.074     0.926 #>  [22,]      0.980     0.020 #>  [23,]      0.540     0.460 #>  [24,]      0.940     0.060 #>  [25,]      0.998     0.002 #>  [26,]      0.998     0.002 #>  [27,]      0.886     0.114 #>  [28,]      0.064     0.936 #>  [29,]      0.990     0.010 #>  [30,]      1.000     0.000 #>  [31,]      1.000     0.000 #>  [32,]      1.000     0.000 #>  [33,]      0.996     0.004 #>  [34,]      0.136     0.864 #>  [35,]      0.988     0.012 #>  [36,]      0.910     0.090 #>  [37,]      0.988     0.012 #>  [38,]      0.976     0.024 #>  [39,]      1.000     0.000 #>  [40,]      0.996     0.004 #>  [41,]      0.990     0.010 #>  [42,]      0.996     0.004 #>  [43,]      0.998     0.002 #>  [44,]      0.994     0.006 #>  [45,]      1.000     0.000 #>  [46,]      1.000     0.000 #>  [47,]      1.000     0.000 #>  [48,]      0.996     0.004 #>  [49,]      0.990     0.010 #>  [50,]      0.998     0.002 #>  [51,]      0.014     0.986 #>  [52,]      0.010     0.990 #>  [53,]      0.000     1.000 #>  [54,]      0.002     0.998 #>  [55,]      0.000     1.000 #>  [56,]      0.000     1.000 #>  [57,]      0.958     0.042 #>  [58,]      0.000     1.000 #>  [59,]      0.016     0.984 #>  [60,]      0.000     1.000 #>  [61,]      0.034     0.966 #>  [62,]      0.004     0.996 #>  [63,]      0.000     1.000 #>  [64,]      0.090     0.910 #>  [65,]      0.014     0.986 #>  [66,]      0.004     0.996 #>  [67,]      0.004     0.996 #>  [68,]      0.002     0.998 #>  [69,]      0.004     0.996 #>  [70,]      0.796     0.204 #>  [71,]      0.000     1.000 #>  [72,]      0.208     0.792 #>  [73,]      0.000     1.000 #>  [74,]      0.142     0.858 #>  [75,]      0.000     1.000 #>  [76,]      0.002     0.998 #>  [77,]      0.266     0.734 #>  [78,]      0.094     0.906 #>  [79,]      0.000     1.000 #>  [80,]      0.558     0.442 #>  [81,]      0.000     1.000 #>  [82,]      0.000     1.000 #>  [83,]      0.000     1.000 #>  [84,]      0.692     0.308 #>  [85,]      0.294     0.706 #>  [86,]      0.000     1.000 #>  [87,]      0.012     0.988 #>  [88,]      0.000     1.000 #>  [89,]      0.482     0.518 #>  [90,]      0.000     1.000 #>  [91,]      0.002     0.998 #>  [92,]      0.054     0.946 #>  [93,]      0.010     0.990 #>  [94,]      0.004     0.996 #>  [95,]      0.004     0.996 #>  [96,]      0.016     0.984 #>  [97,]      0.166     0.834 #>  [98,]      0.000     1.000 #>  [99,]      0.016     0.984 #> [100,]      0.088     0.912 #>"},{"path":"/reference/str_sub_front_last.html","id":null,"dir":"Reference","previous_headings":"","what":"Substring based on number of first and last characters — str_sub_front_last","title":"Substring based on number of first and last characters — str_sub_front_last","text":"Substring based number first last characters","code":""},{"path":"/reference/str_sub_front_last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substring based on number of first and last characters — str_sub_front_last","text":"","code":"str_sub_front_last(string, front, last, sep = \"...\")"},{"path":"/reference/str_sub_front_last.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substring based on number of first and last characters — str_sub_front_last","text":"string string front number characters front last number characters back sep separator middle","code":""},{"path":"/reference/str_sub_front_last.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substring based on number of first and last characters — str_sub_front_last","text":"Returns function colours","code":""},{"path":"/reference/str_sub_front_last.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Substring based on number of first and last characters — str_sub_front_last","text":"Kevin Wang","code":""},{"path":"/reference/str_sub_front_last.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substring based on number of first and last characters — str_sub_front_last","text":"","code":"string = c(\"Apples\", \"Banana\") front = 2 last = 2 str_sub_front_last(string, front, last) #> [1] \"Ap...es\" \"Ba...na\""},{"path":"/reference/svm_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Performing CV using svm — svm_cv","title":"Performing CV using svm — svm_cv","text":"Performing CV using svm","code":""},{"path":"/reference/svm_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performing CV using svm — svm_cv","text":"","code":"svm_cv(cv_obj)"},{"path":"/reference/svm_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performing CV using svm — svm_cv","text":"cv_obj outputs cvPartition function","code":""},{"path":"/reference/svm_cv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performing CV using svm — svm_cv","text":"Kevin Wang","code":""},{"path":"/reference/svm_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performing CV using svm — svm_cv","text":"","code":"x = iris[51:150, -5] y = factor(iris[51:150, 5]) cv_obj = cv_partition(x = x, y = y, nfolds = 5) svm_cv(cv_obj) #> $fold_error #> Fold1 Fold2 Fold3 Fold4 Fold5  #>  0.05  0.05  0.05  0.10  0.05  #>  #> $mean_error #> [1] 0.06 #>  #> $predict_class #>   [1] versicolor versicolor versicolor versicolor versicolor versicolor #>   [7] versicolor versicolor versicolor versicolor versicolor versicolor #>  [13] versicolor versicolor versicolor versicolor versicolor versicolor #>  [19] versicolor versicolor virginica  versicolor versicolor versicolor #>  [25] versicolor versicolor versicolor virginica  versicolor versicolor #>  [31] versicolor versicolor versicolor virginica  versicolor versicolor #>  [37] versicolor versicolor versicolor versicolor versicolor versicolor #>  [43] versicolor versicolor versicolor versicolor versicolor versicolor #>  [49] versicolor versicolor virginica  virginica  virginica  virginica  #>  [55] virginica  virginica  versicolor virginica  virginica  virginica  #>  [61] virginica  virginica  virginica  virginica  virginica  virginica  #>  [67] virginica  virginica  virginica  versicolor virginica  virginica  #>  [73] virginica  virginica  virginica  virginica  virginica  virginica  #>  [79] virginica  virginica  virginica  virginica  virginica  versicolor #>  [85] virginica  virginica  virginica  virginica  virginica  virginica  #>  [91] virginica  virginica  virginica  virginica  virginica  virginica  #>  [97] virginica  virginica  virginica  virginica  #> Levels: versicolor virginica #>  #> $predict_prob #>         versicolor   virginica #>   [1,] 0.950754435 0.049245565 #>   [2,] 0.973902294 0.026097706 #>   [3,] 0.876974905 0.123025095 #>   [4,] 0.911439396 0.088560604 #>   [5,] 0.890709575 0.109290425 #>   [6,] 0.959366753 0.040633247 #>   [7,] 0.923930076 0.076069924 #>   [8,] 0.958034928 0.041965072 #>   [9,] 0.973121751 0.026878249 #>  [10,] 0.911760579 0.088239421 #>  [11,] 0.851222861 0.148777139 #>  [12,] 0.985697637 0.014302363 #>  [13,] 0.943128907 0.056871093 #>  [14,] 0.953411789 0.046588211 #>  [15,] 0.986603808 0.013396192 #>  [16,] 0.992075426 0.007924574 #>  [17,] 0.903379698 0.096620302 #>  [18,] 0.978211229 0.021788771 #>  [19,] 0.698933181 0.301066819 #>  [20,] 0.987543326 0.012456674 #>  [21,] 0.428044923 0.571955077 #>  [22,] 0.994316081 0.005683919 #>  [23,] 0.770374085 0.229625915 #>  [24,] 0.966698198 0.033301802 #>  [25,] 0.988112166 0.011887834 #>  [26,] 0.987268167 0.012731833 #>  [27,] 0.880311979 0.119688021 #>  [28,] 0.284019673 0.715980327 #>  [29,] 0.932167103 0.067832897 #>  [30,] 0.969539642 0.030460358 #>  [31,] 0.984459738 0.015540262 #>  [32,] 0.984881351 0.015118649 #>  [33,] 0.990494314 0.009505686 #>  [34,] 0.193387145 0.806612855 #>  [35,] 0.935924167 0.064075833 #>  [36,] 0.961442017 0.038557983 #>  [37,] 0.940484345 0.059515655 #>  [38,] 0.906278273 0.093721727 #>  [39,] 0.984382908 0.015617092 #>  [40,] 0.967250691 0.032749309 #>  [41,] 0.944355106 0.055644894 #>  [42,] 0.974623759 0.025376241 #>  [43,] 0.989293363 0.010706637 #>  [44,] 0.962169745 0.037830255 #>  [45,] 0.973778551 0.026221449 #>  [46,] 0.992449965 0.007550035 #>  [47,] 0.985976666 0.014023334 #>  [48,] 0.992744891 0.007255109 #>  [49,] 0.950864769 0.049135231 #>  [50,] 0.989626435 0.010373565 #>  [51,] 0.041125660 0.958874340 #>  [52,] 0.044047817 0.955952183 #>  [53,] 0.007356465 0.992643535 #>  [54,] 0.015590040 0.984409960 #>  [55,] 0.003539223 0.996460777 #>  [56,] 0.020503741 0.979496259 #>  [57,] 0.672039815 0.327960185 #>  [58,] 0.013417080 0.986582920 #>  [59,] 0.036279089 0.963720911 #>  [60,] 0.088107440 0.911892560 #>  [61,] 0.125333621 0.874666379 #>  [62,] 0.023642863 0.976357137 #>  [63,] 0.015102915 0.984897085 #>  [64,] 0.024609782 0.975390218 #>  [65,] 0.016165825 0.983834175 #>  [66,] 0.011718691 0.988281309 #>  [67,] 0.018433587 0.981566413 #>  [68,] 0.139985406 0.860014594 #>  [69,] 0.111089654 0.888910346 #>  [70,] 0.767780719 0.232219281 #>  [71,] 0.010737408 0.989262592 #>  [72,] 0.017710919 0.982289081 #>  [73,] 0.060791791 0.939208209 #>  [74,] 0.125076790 0.874923210 #>  [75,] 0.035765589 0.964234411 #>  [76,] 0.031214165 0.968785835 #>  [77,] 0.247465993 0.752534007 #>  [78,] 0.197623832 0.802376168 #>  [79,] 0.002184550 0.997815450 #>  [80,] 0.174428266 0.825571734 #>  [81,] 0.050200528 0.949799472 #>  [82,] 0.174647901 0.825352099 #>  [83,] 0.007411501 0.992588499 #>  [84,] 0.593686052 0.406313948 #>  [85,] 0.201283836 0.798716164 #>  [86,] 0.040618566 0.959381434 #>  [87,] 0.059908738 0.940091262 #>  [88,] 0.022014760 0.977985240 #>  [89,] 0.363468719 0.636531281 #>  [90,] 0.034454976 0.965545024 #>  [91,] 0.016924221 0.983075779 #>  [92,] 0.018106369 0.981893631 #>  [93,] 0.013905811 0.986094189 #>  [94,] 0.009689521 0.990310479 #>  [95,] 0.033935714 0.966064286 #>  [96,] 0.007082360 0.992917640 #>  [97,] 0.083729066 0.916270934 #>  [98,] 0.034621920 0.965378080 #>  [99,] 0.026096034 0.973903966 #> [100,] 0.167312941 0.832687059 #>"},{"path":"/reference/to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a named vector into a data.frame — v2df","title":"Convert a named vector into a data.frame — v2df","text":"Convert named vector data.frame Turn one-row table data frame","code":""},{"path":"/reference/to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a named vector into a data.frame — v2df","text":"","code":"v2df(vec, variable_name = \"variable\", value_name = \"value\")  t2df(table, variable_name = \"variable\", value_name = \"value\")"},{"path":"/reference/to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a named vector into a data.frame — v2df","text":"vec named vector variable_name variable_name value_name value_name table frequency table (.e. one row)","code":""},{"path":"/reference/to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a named vector into a data.frame — v2df","text":"Kevin Wang","code":""},{"path":"/reference/to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a named vector into a data.frame — v2df","text":"","code":"x = 1:5 names(x) = letters[1:5] v2df(x) #> # A tibble: 5 × 2 #>   variable value #>   <chr>    <int> #> 1 a            1 #> 2 b            2 #> 3 c            3 #> 4 d            4 #> 5 e            5 x = table(sample(letters[1:5], 100, replace = TRUE)) t2df(x) #> # A tibble: 5 × 2 #>   variable value #>   <chr>    <dbl> #> 1 a           26 #> 2 b           20 #> 3 c           20 #> 4 d           19 #> 5 e           15"},{"path":"/reference/top.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the first k rows and first k columns of the data — top","title":"Display the first k rows and first k columns of the data — top","text":"Display first k rows first k columns data","code":""},{"path":"/reference/top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the first k rows and first k columns of the data — top","text":"","code":"top(x, k = 6)"},{"path":"/reference/top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the first k rows and first k columns of the data — top","text":"x data.frame k number rows columns view","code":""},{"path":"/reference/top.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display the first k rows and first k columns of the data — top","text":"Kevin Wang","code":""},{"path":"/reference/top.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the first k rows and first k columns of the data — top","text":"","code":"top(mtcars) #>                    mpg cyl disp  hp drat    wt #> Mazda RX4         21.0   6  160 110 3.90 2.620 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 #> Datsun 710        22.8   4  108  93 3.85 2.320 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 #> Valiant           18.1   6  225 105 2.76 3.460"},{"path":"/reference/transformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Arcsinh transform — arcsinh","title":"Arcsinh transform — arcsinh","text":"Arcsinh transform expit function logit function","code":""},{"path":"/reference/transformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arcsinh transform — arcsinh","text":"","code":"arcsinh(x)  expit(x)  logit(x)"},{"path":"/reference/transformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arcsinh transform — arcsinh","text":"x number 0 1","code":""},{"path":"/reference/transformations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Arcsinh transform — arcsinh","text":"Kevin Wang","code":""},{"path":"/reference/transformations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arcsinh transform — arcsinh","text":"","code":"set.seed(11) x = rnorm(100) plot(x, arcsinh(x))  curve(expit, from = -5, to = 5)  curve(logit, from = 0.01, to = 0.99)"}]
